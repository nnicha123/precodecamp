.form{
    @include respond(tab-port){
        width: max-content;
    }

    &__group:not(:last-child){
        margin-bottom: 2rem;

    }

    &__input{
        font-size: 1.5rem;
        font-family: inherit;
        color: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white,.5);
        border:none;
        border-bottom: 3px solid transparent;
        width: 90%;
        display: block;
        transition: all .3s;

        &:focus{
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black,.1);
            border-bottom: 3px solid $color-primary;
        }

            // Add pseudo element
        &::-webkit-input-placeholder{
            color: $color-grey-dark-2;
        }

        &:focus:invalid{
            border-bottom: 3px solid $color-secondary-dark;
        }

        @include respond(tab-port){
            width: 100%;
        }
    }


    &__label{
        
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        // Display as block to use block model properties above
        display: block;
    }

    // Input adjacent sibling of label so use adjacent sibling selector "+" (sibling we select always have to be after)
    // Place holder shown means we wrote nothing in form
    &__input:placeholder-shown + &__label{
        // Opacity makes sure you can animate as well, using visibility:hidden only can't animate
        opacity: 0;
        visibility: hidden;
        // Set initial state so the final state will move down
        transform: translateY(-4rem);
    }

    
    &__radio-group{
        // Side by side
        width: 49%;
        display: inline-block;
        font-size: $default-font-size;
        cursor: pointer;

        @include respond(tab-port){
            width: 100%;
            margin-bottom: 2rem;
        }
    }
    // Hide original radio input button
    &__radio-input{
        display: none;
    }

    &__radio-label{
        font-size: $default-font-size;
        cursor: pointer;
        // PARENT (absolute relative to this)
        position: relative;
        padding-left: 4.5rem;
    }
// Custom own button
    &__radio-button{
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        // If don't make it a block will not occupy entire width, will act as a text because it is inside span
        // inline-block makes it a block but in the same line (don't make a new line)
        display: inline-block;
        // To position
        position: absolute;
        // padding-left: .5px;
        left: 0rem;
        top:-.4rem;
        // top:.2rem;
        // make pseudo element for inside button
        &::after{
            // pseudo element need to set content
            content:"";
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            // To be a circle
            border-radius: 50%;
            background-color: $color-primary;
            position: absolute;
            top:50%;
            left:50%;
            transform: translate(-50%,-50%);
            // Make invisible first
            opacity: 0;
            transition: all .3s;
        }
    }
    // Radio button have pseudo class checked
    &__radio-input:checked ~ &__radio-label &__radio-button::after{
        opacity: 1;
    }
}