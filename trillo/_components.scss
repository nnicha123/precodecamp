// LOGO
.logo{
    height: 3.25rem;
    margin: 2rem;
}

// SEARCH
.search{
    flex:0 0 40%;

    // Nested flex box, this item is the container of its child, with the default setting stretch
    display: flex;
    align-items: center;
    justify-content: center;
    &__input{
        font-family: inherit;
        font-size: inherit;
        background-color: var(--color-grey-light-2);
        border:none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        // give negative margin so button will move on top of input
        margin-right: -3.5rem;

        &:focus{
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder{
            font-weight: 100;
            color: var(--color-grey-light-4);
        }

    }
    
    &__input:focus + &__button{
        background-color: var(--color-grey-light-2);
    }

    &__button{
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus{
            outline:none;
        }
        &:active{
            transform: translateY(2px);
        }
    }

    &__icon{
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3);
    }
}

// USER NAV
.user-nav{
    // to stretch the row to the entire height of container
    align-self: stretch;

    display: flex;
    align-items: center;
    
    // child is user-nav__icon-box & user-nav__user
    & > *{
        padding: 0 2rem;
        cursor: pointer;
        // hovering does not go to the entire area so set height of child to 100%
        height: 100%;
        display: flex;
        align-items: center;
    }
    & > *:hover{
        background-color: var(--color-grey-light-3);
    }

    &__icon-box{
        // child of icon-box are the icons but if want to apply to the user too, can set in &>*
        // display: flex;
        // align-items: center;
        // set notification relative to this
        position: relative;
    }
    &__icon{
        height: 2.25rem;
        width: 2.25rem;
        fill:var(--color-grey-dark-2);

    }
    &__notification{
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
        // set position 
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;
        // flex-box works with text as well so in this case, since its a span element, container is the span
        display: flex;
        align-items: center;
        justify-content: center;
    }

    &__user-photo{
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

// SIDE NAVIGATION
.side-nav{
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    &__item{
        // want the pseudo element to be positioned in relative to the item
        position: relative;

        &:not(:last-child){
            margin-bottom: .5rem;
        }
    }
    // add pseudo element before
    &__item::before{
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        // Transformation of width has delay of .2s to wait for the scale to finish first
        transition: transform .2s,
                    width .4s cubic-bezier(1,0,0,1) .2s;

    }
    &__item:hover::before,
    &__item--active::before{
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before{
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited{
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        // container want items to align
        display: flex;
        align-items: center;
        position: relative;
        z-index: 10;
    }
    &__icon{
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        // color of current element or parent element
        fill: currentColor;
    }
}
// LEGAL TEXT
.legal{
    font-size: 1.2rem;
    text-align: center;
    padding: 2.5rem;
    color: var(--color-grey-light-4);
}

// GALLERY
.gallery{
    display: flex;
    &__photo{
        width: 100%;
        display: block;
    }
}
// HOTEL OVERVIEWS
.overview{
    display: flex;
    align-items: center;
    border-bottom: var(--line);

    &__heading{
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }
    &__stars{
        // trick -> in flex box (want to occupy only its space so cannot use flex grow =1
        // margin-right:auto calculates the margin needed on the right of the stars and let its next element be on the rightmost
        margin-right: auto;
        // to remove in-line element properties of svg stars, element has white space at the bottom, so not vertically aligned
        // so set its parent to flex so it becomes flex item
        display: flex;
    }
    &__icon-star,
    &__icon-location{
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }
    &__location{
        font-size: 1.2rem;
        display: flex;
        vertical-align: center;
    }

    &__icon-location{
        margin-right: .5rem;
    }
    &__rating{
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        // Override the align-items:center (by aligning self to stretch to fill
        align-self: stretch;
        padding: 0 2.25rem;
        // Now set elements to the center (need flex direction to make it column first otherwise side by side)
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    &__rating-average{
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: 3px;

    }
    &__rating-count{
        font-size: .8rem;
        text-transform: uppercase;
    }
}
// BUTTON INLINE
.btn-infinite{
    border:none;
    color: var(--color-primary);
    font-size: inherit;
    // same color as text
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    &:hover{
        color: var(--color-grey-dark-1);
    }

    &:focus{
        outline:none;
        animation: pulsate 1s infinite;
    }
}

@keyframes pulsate{
    0%{
        transform: scale(1);
        box-shadow: none;
    }
    50%{
        transform:scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,0.25);
    }
    100%{
        transform: scale(1.05);
        box-shadow: none;
    }
}

// PARAGRAPH
// use last of type instead because last child is not the paragraph
.paragraph:not(:last-of-type){
    margin-bottom: 2rem;
}
// LIST
.list{
    list-style: none;
    // top and bottom = 3rem left and right = 0
    margin: 3rem 0;
    // padding to give space between text and border
    padding: 3rem 0;
    border-top:var(--line);
    border-bottom: var(--line);
    display: flex;
    flex-wrap: wrap;

    &__item{
        // Want 2 elements side by side (set width to 100%/2)
        flex: 0 0 50%;
        margin-bottom: .7rem;
    }
    //before item element, put a pseudo element
    &__item::before{
        // need to always specify content property for pseudo elements
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;
        // if use as background image cannot change color -> for old browsers
        // background-image: url(../img/chevron-thin-right.svg);
        // background-size: cover;

        // for new browsers can use mask -> set entire background of icon to pink
        background-color: var(--color-primary);
        // and put mask on top of it (only the position where icon is there can see color)
        // only work in webkit browser
        -webkit-mask-image:  url(../img/chevron-thin-right.svg);
        -webkit-mask-size:cover;
    }

}

// RECOMMEND
.recommend{
    font-size: 1.3rem;
    color:var(--color-grey-dark-3);
    display: flex;
    align-items: center;

    &__photo{
        // Initially set all to border-box but in this case we don't want image to shrink
        // So set back to default which is content-box
        box-sizing: content-box;
        height: 4rem;
        width:4rem;
        border-radius: 50%;
        border: 3px solid #fff;
        // give images negative right margin except the last one so they overlap
        &:not(:last-child){
            margin-right: -1.5rem;
        }
    }

    &__count{
        // with the flex properties it will automatically calculate the margin
        margin-right: auto;
    }

    &__friends{

    }
}
// REVIEWS
.review{
    background-color:#fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden;

    &__rating{
        color: var(--color-primary);
        font-weight: 800;
        font-size: 2.2rem;
    }

    &__text{
        margin-bottom: 2rem;
        z-index: 10;
        position: relative;
    }
    &__user{
        display: flex;
        align-items: center;
    }
    &__photo{
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }
    &__user-box{
        // to push the rating to the right
        margin-right: auto;
    }
    &__user-name{
        font-size: 1.1rem;
        font-weight: 700;
    }
    &__user-date{
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }
    // For quotation marks use pseudo-elements
    // HTML entities css-tricks (need pseudo element to do)
    &::before{
      content: "\201C";

      position: absolute;
      top:-2.75rem;
      left: -1rem;
    //Element has line height because it is text so need to set line height to a lower value
      line-height: 1;
      font-size: 20rem;
      font-family: sans-serif;
      color: var(--color-grey-light-2);
    //   don't want to be over text (z-index only works when we set position (can be anything))
      z-index :1;
    }
}