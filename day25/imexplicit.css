.container{
    width: 1000px;
    background-color: #ddd;
    margin: 30px auto;
    display: grid;
    /* grid-template-rows: repeat(2,150px);
    grid-template-columns: repeat(2,1fr); */
    grid-gap: 30px;
    /* Note, undefined contents are implicit grids */
    /* use grid auto to style them */
    /* grid-auto-rows: 100px; */

    /*2) additional implicit grids added as rows because grid-auto-flow set to row, try changing; */
    /* grid-auto-flow: column;
    grid-auto-columns: 200px; */
    /* if set this way then auto-row has no meaning */
    grid-auto-rows: 80px;
    /* dense keyword means no gaps!!!!!!!!!!!!!!!1 */
    grid-auto-flow: row dense;
    grid-auto-columns: .5fr;
    /* 2. items aligns the item relative to its own grid
    align-items: start; */
    /* justify-items not available for flex */
    justify-items: end;

    /* 3 Align grid tracks to grid container */
    grid-template-rows: repeat(2,100px);
    grid-template-columns: repeat(2,200px);
    /* set height for container, width already set to 1000px */
    height: 1000px;
    /* the content will be centered according to the CONTAINER */
    /* horizontally */
    justify-content: center;
    /* vertically use align */
    align-content: space-between;
}

.item{
    padding: 10px;
    color: white;
    font-family: sans-serif;
    font-size: 30px;
    background-color: orange;
}

.item--4{
    background-color: palevioletred;
    grid-row: 2/ span 3;
    /* align vertically, justify horizontally (override the align/justify-items on the parent */
    /* align-self: start;
    justify-self: start; */
}

.item--6{
    background-color: turquoise;
    grid-row: 2 /span 2;
}


.item--7{
    background-color: tomato;
    grid-column: 1/-1;
}